#!/usr/bin/env bash

# Set XDG
if [[ -z "$XDG_CONFIG_HOME" ]]; then
    XDG_CONFIG_HOME="$HOME/.config"
fi

if [[ -z "$XDG_DATA_HOME" ]]; then
    XDG_DATA_HOME="$HOME/.local/share"
fi

if [[ -z "$XDG_CACHE_HOME" ]]; then
    XDG_CACHE_HOME="$HOME/.cache"
fi
export ZDOTDIR="$XDG_CONFIG_HOME/zsh"

# Move execution to the dotfiles directory and load dependencies
cd -- "$(dirname "$0")/.." || exit 1
DOTFILES="$PWD"
. "${DOTFILES}/install/lib/helpers.sh"
. "${DOTFILES}/install/lib/prints.sh"

# Check required packages
__require zsh
__require nvim
__require curl

# Set user shell to zsh
if [[ ! $SHELL =~ "zsh" ]]; then
    __p_echo "I require your password in order to change the default shell to ZSH"
    chsh -s "$(which zsh)"
    if [ $? -eq 0 ]
    then
        __p_echo "The default shell was changed to ZSH"
    else
        __p_err "Couldn't change the shell to ZSH"
    fi
fi

# Create $XDG_CONFIG_HOME and $XDG_DATA_HOME
mkdir -p "${XDG_CONFIG_HOME}" "${XDG_DATA_HOME}"

# Symlink everything inside config dir into $XDG_CONFIG_HOME
for link in "${DOTFILES}/config/"*; do
    # Skip ln if directory exists and is not symlink
    # othervise it would create the symlink inside the directory
    # Could replace the directory with symlink,
    # however, would rather user deletes it, so I do not destroy data
    if [[ -d "${XDG_CONFIG_HOME}/$(basename "${link}")" ]]; then
        if [[ ! -L "${XDG_CONFIG_HOME}/$(basename "${link}")" ]]; then
            __p_warn "Directory '${XDG_CONFIG_HOME}/$(basename "${link}")' exists"
            continue
        fi
    fi
    ln -sfn "${link}" "${XDG_CONFIG_HOME}/$(basename "${link}")"
done
